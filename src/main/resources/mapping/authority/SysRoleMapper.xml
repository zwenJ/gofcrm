<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zking.gofcrm.authority.mapper.SysRoleMapper">

  <cache type="com.zking.gofcrm.common.redis.RedisCache"/>

  <resultMap id="BaseResultMap" type="sysRole">
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_alias" jdbcType="VARCHAR" property="roleAlias" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="role_flag" jdbcType="INTEGER" property="roleFlag" />
  </resultMap>

  <resultMap id="RoleAuthMap" type="sysRole">
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_alias" jdbcType="VARCHAR" property="roleAlias" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="role_flag" jdbcType="INTEGER" property="roleFlag" />
    <!-- 角色对应的权限集合 -->
    <collection property="authzList" javaType="sysAuthority">
      <id column="auth_id" jdbcType="VARCHAR" property="authId" />
      <result column="auth_parent_id" jdbcType="VARCHAR" property="authParentId" />
      <result column="auth_type" jdbcType="VARCHAR" property="authType" />
      <result column="auth_text" jdbcType="VARCHAR" property="authText" />
      <result column="auth_url" jdbcType="VARCHAR" property="authUrl" />
      <result column="auth_tip" jdbcType="VARCHAR" property="authTip" />
      <result column="auth_image" jdbcType="VARCHAR" property="authImage"/>
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    role_id, role_name, role_desc, role_flag
  </sql>

  <sql id="Table_role_column_A">
    A.role_id, A.role_name, A.role_desc, A.role_flag
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>

  <!-- 查询一个角色的集合 -->
  <select id="selectMapAll" resultMap="BaseResultMap" parameterType="map" useCache="true">
    SELECT <include refid="Base_Column_List"/>
    FROM sys_role
    <trim prefix="WHERE" suffixOverrides="AND">
      <if test="roleId != null and roleId != ''">
        role_id = #{roleId,jdbcType=VARCHAR} AND
      </if>
    </trim>
  </select>

  <!-- 角色权限联表查询的数据 -->
  <select id="selectMapRA" resultType="sysRole">

  </select>

  <!-- 根据用户编号 查询 角色信息 -->
  <select id="selectByUserIdRole" resultMap="BaseResultMap" parameterType="map">
    SELECT <include refid="Table_role_column_A"/>
    FROM sys_user as B
    LEFT JOIN user_role as Z ON Z.user_id = B.user_id
    LEFT JOIN sys_role as A ON A.role_id = Z.role_id
    WHERE B.user_id = #{userId}
    ORDER BY A.role_id ASC
  </select>

  <!-- 插入角色对应的权限信息 -->
  <insert id="insertRoleAuth" parameterType="map">
    INSERT into role_authority(role_id, auth_id)
    VALUES (#{roleId,jdbcType=VARCHAR}, #{authId,jdbcType=VARCHAR})
  </insert>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>

  <!-- 添加角色 -->
  <insert id="insert" parameterType="sysRole">
    insert into sys_role (role_id, role_name,role_alias, role_desc,
      role_flag)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleAlias, jdbcType=VARCHAR},
      #{roleDesc,jdbcType=VARCHAR}, #{roleFlag,jdbcType=INTEGER})
  </insert>


  <insert id="insertSelective" parameterType="com.zking.gofcrm.authority.model.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="roleFlag != null">
        role_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleFlag != null">
        #{roleFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zking.gofcrm.authority.model.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleFlag != null">
        role_flag = #{roleFlag,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.gofcrm.authority.model.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_flag = #{roleFlag,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>