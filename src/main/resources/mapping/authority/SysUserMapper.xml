<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zking.gofcrm.authority.mapper.SysUserMapper">

  <resultMap id="BaseResultMap" type="com.zking.gofcrm.authority.model.SysUser">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_flag" jdbcType="INTEGER" property="userFlag" />
    <result column="user_add_id" jdbcType="VARCHAR" property="userAddId"/>
  </resultMap>

  <!-- 二表联查，结果映射 -->
  <resultMap id="ResultMapABC" type="sysUser">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_flag" jdbcType="INTEGER" property="userFlag" />
    <result column="user_add_id" jdbcType="VARCHAR" property="userAddId"/>
    <!-- 用户角色集合 -->
    <collection property="roleList" javaType="sysRole">
      <id column="role_id" jdbcType="VARCHAR" property="roleId" />
      <result column="role_name" jdbcType="VARCHAR" property="roleName" />
      <result column="role_alias" jdbcType="VARCHAR" property="roleAlias"/>
      <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
      <result column="role_flag" jdbcType="INTEGER" property="roleFlag" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    user_id, user_name, user_pwd, user_flag, user_add_id
  </sql>

  <sql id="Table_name_A">sys_user as A</sql>
  <sql id="Table_name_B">sys_role as B</sql>
  <sql id="Table_name_C">sys_authority as C</sql>

  <sql id="Column_list_A">
    A.user_id, A.user_name, A.user_pwd, A.user_flag, A.user_add_id,
  </sql>

  <sql id="Column_list_B">
    B.role_id, B.role_name, B.role_alias, B.role_desc, B.role_flag,
  </sql>

  <sql id="Column_list_C">
    C.auth_id, C.auth_parent_id, C.auth_type, C.auth_text, C.auth_url, C.auth_tip,
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <!-- 判断一个用户是否具有对 一个用户操作的 权限 -->
  <select id="judgeAuthz" resultType="int" parameterType="map">
    select COUNT(*) FROM
    user_role as A LEFT JOIN role_authority as B ON B.role_id = A.role_id
    LEFT JOIN sys_authority as C  ON C.auth_id = B.auth_id
    WHERE
    A.user_id = #{userId, jdbcType=VARCHAR} AND
    C.auth_lv = #{roleId, jdbcType=VARCHAR}
  </select>

  <!-- 用户登录 -->
  <select id="loginUser" resultMap="BaseResultMap" parameterType="string">
    SELECT user_pwd from sys_user WHERE user_name = #{userName};
  </select>

  <!-- 根据条件查询一个用户 -->
  <select id="selectMapUser" resultMap="ResultMapABC" parameterType="map">
    SELECT
    <trim suffixOverrides=",">
      <include refid="Column_list_A"/>
      <include refid="Column_list_B"/>
    </trim>
    from sys_user as A
    LEFT JOIN user_role as Z ON Z.user_id = A.user_id
    LEFT JOIN sys_role as B ON B.role_id = Z.role_id
    <trim prefix="WHERE" suffixOverrides="AND">
      <if test="userName != null and userName !=''">
        A.user_name = #{userName} AND
      </if>
    </trim>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>

  <!-- 新增一个用户 -->
  <insert id="insert" parameterType="sysUser">
    <!-- 插入用户信息 -->
    insert into sys_user (<include refid="Base_Column_List"/>)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userFlag,jdbcType=INTEGER}, #{userAddId, jdbcType=VARCHAR});
    <!-- 同步更新 用户-角色 的关系 -->
    INSERT into user_role (user_id, role_id)
    VALUES (#{userId,jdbcType=VARCHAR}, #{sysRole.roleId, jdbcType=VARCHAR});
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="sysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userFlag != null">
        user_flag = #{userFlag,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="sysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_flag = #{userFlag,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>